#include<windows.h>
#include <conio.h>
#include<math.h>
LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);//窗口函数说明
RECT rect;//定义矩形结构体

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInst, LPSTR lpszCmdLine, int nCmdShow)
{
	WNDCLASSEX wcex;
	//四个参数分别：对应程序进程的使用句柄，前一个实例的句柄，命令参数，程序在初始化时如何显示窗口
	HWND hwnd; //指向待会创建的窗口的句柄
	MSG msg;  //消息变量，存储操作系统捕获的与该窗口相关的所有信息
	 //一个待初始化的结构体变量，=》用来定义窗口的一些属性
	TCHAR lpszClassName[] = "My_Drawing"; //窗口类名

	wcex.cbSize = sizeof(WNDCLASSEX);
	wcex.style = 0;
	wcex.lpfnWndProc = WndProc;
	wcex.cbClsExtra = 0;
	wcex.cbWndExtra = 0;
	wcex.hInstance = hInstance;
	wcex.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	wcex.hCursor = LoadCursor(NULL, IDC_ARROW);
	wcex.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	wcex.lpszMenuName = NULL;
	wcex.lpszClassName = lpszClassName;
	wcex.hIconSm = LoadIcon(wcex.hInstance, IDI_APPLICATION);
	//以下进行窗口类的注册
	if (!RegisterClassEx(&wcex))
	{//如果注册失败则发出警告
		MessageBox(NULL, "窗口注册失败", "窗口注册", NULL);//第三个参数时框名
		return 1;
	}

	//创建窗口
	hwnd = CreateWindow(
		lpszClassName,//窗口类名
		"曹正英", //窗口实例名
		WS_OVERLAPPEDWINDOW,//窗口风格
		CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,//窗口的左上角坐标高和宽都为默认值
		NULL, NULL,//无父窗口，无主菜单
		hInstance,
		NULL
	);
	if (!hwnd)
	{
		MessageBox(NULL, "窗口创建失败", (LPCTSTR)"创建窗口", NULL);
		return 1;
	}
	//显示刷新之后窗口再变成活得
	ShowWindow(hwnd, nCmdShow);//显示窗口
	UpdateWindow(hwnd);//刷新窗口

	while (GetMessage(&msg, NULL, 0, 0)) {//消息循环
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return msg.wParam;//程序终止时将消息返回系统
}

//窗口函数的代码
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {
	HDC hdc; //设备描述符，存储了当前窗口的坐标、画笔、画刷等系列绘图相关的输出设备属性

	PAINTSTRUCT ps;
	int x, y;//定义鼠标的位置坐标
	static BOOL CIRCLE = false, RECT = false;//定义绘制圆或矩形摁得标志变量
	x = LOWORD(lParam);//得到鼠标的位置 鼠标的x坐标
	y = LOWORD(lParam);//鼠标的y坐标
	switch (msg)
	{
	case WM_MOUSEMOVE://处理鼠标移动信息
		rect.right = x;//矩形的右下角坐标为当前鼠标位置
		rect.bottom = y;
		if (CIRCLE == TRUE || RECT == TRUE)
			InvalidateRect(hwnd, NULL, 1);//发出重绘信息
		break;
	case WM_LBUTTONDBLCLK:
		if (wParam & MK_CONTROL) {
			CIRCLE = true;
			RECT = false;
			rect.left = x;
			rect.top = y;//圆的左上角为当前鼠标位置
		}
		else if (wParam&MK_SHIFT) {
			RECT = true;
			CIRCLE = false;
			rect.left = x;
			rect.top = y;
		}
		else {
			CIRCLE = false;
			RECT = false;
		}
		break;
	
	case WM_LBUTTONUP:
		CIRCLE = false;
		RECT = false;
		break;
	
	case WM_PAINT:
		hdc = BeginPaint(hwnd, &ps);
		if (CIRCLE)//绘制圆形
			Ellipse(hdc, rect.left, rect.top, rect.right, rect.bottom);
		else if (RECT)//绘制矩形
			Rectangle(hdc, rect.left, rect.top, rect.right, rect.bottom);
		EndPaint(hwnd, &ps);
		break;

	case WM_DESTROY:
		PostQuitMessage(0);//发出退出消息
		break;
	default:
		return DefWindowProc(hwnd, msg, wParam, lParam);//默认时采用系统消息默认处理函数
		break;
	}
	return 0;
}