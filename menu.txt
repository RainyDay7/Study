//菜单的定义和调用及其消息响应：
//定义――>.rc文件中定义
//调用――>wndclass.lpszMenuName=在rc中定义好的菜单资源名
//消息响应：

///resource.rc资源文件 
/*
// Microsoft Visual C++ 生成的资源脚本。
//
#include "6_1.h"
MYMENUNAME MENU
BEGIN
	POPUP"文件(&F)"
	BEGIN
		MENUITEM"创建统计计算菜单项(&P)\t Ctrl+P",IDM_ADDMENU
		MENUITEM"删除统计计算菜单项(&D)\t Ct/rl+D",IDM_DELMENU,GRAYED
		MENUITEM SEPARATOR
		MENUITEM "退出(&X)",IDM_EXIT
	END
	MENUITEM"帮助(&H)",IDM_HELP
END

MYMENUACCEL ACCELERATORS
BEGIN
	"^P",IDM_ADDMENU,ASCII,NOINVERT
	"^D",IDM_DELMENU,ASCII,NOINVERT
	"^X",IDM_EXIT,ASCII,NOINVERT
END
*/ 


#pragma once
#define IDM_ADDMENU 15//增加菜单项的ID
#define IDM_DELMENU 16//删除菜单项的ID
#define IDM_EXIT 17//退出菜单项的ID
#define IDM_HELP 22//帮助菜单项的ID
#define IDM_QiuHe 23//求和菜单项的ID
#define IDM_FangCha 24//方差菜单项的ID
#define IDM_PingJunZhi 25//平均值菜单项的ID
#define IDM_JunFangGen 26//均方根菜单项的ID


#include<windows.h>
#include <conio.h>
#include<math.h>
long WINAPI WndProc(HWND hwnd, UINT msg, UINT wParam, LONG lParam);//窗口函数说明


int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInst, LPSTR lpszCmdLine, int nCmdShow)
{
	WNDCLASSEX wcex;

	//四个参数分别：对应程序进程的使用句柄，前一个实例的句柄，命令参数，程序在初始化时如何显示窗口
	HWND hwnd; //指向待会创建的窗口的句柄
	MSG msg;  //消息变量，存储操作系统捕获的与该窗口相关的所有信息
	 //一个待初始化的结构体变量，=》用来定义窗口的一些属性
	TCHAR lpszClassName[] = "My_Drawing"; //窗口类名

	wcex.cbSize = sizeof(WNDCLASSEX);
	wcex.style = 0;
	wcex.lpfnWndProc = WndProc;
	wcex.cbClsExtra = 0;
	wcex.cbWndExtra = 0;
	wcex.hInstance = hInstance;
	wcex.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	wcex.hCursor = LoadCursor(NULL, IDC_ARROW);
	wcex.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	wcex.lpszMenuName = "MYMENUNAME";
	wcex.lpszClassName = lpszClassName;

	wcex.hIconSm = LoadIcon(wcex.hInstance, IDI_APPLICATION);
	//以下进行窗口类的注册
	if (!RegisterClassEx(&wcex))
	{//如果注册失败则发出警告
		MessageBox(NULL, "窗口注册失败", "窗口注册", NULL);//第三个参数时框名
		return 1;
	}

	//创建窗口
	hwnd = CreateWindow(
		lpszClassName,//窗口类名
		"曹正英", //窗口实例名
		WS_OVERLAPPEDWINDOW,//窗口风格
		CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,//窗口的左上角坐标高和宽都为默认值
		NULL, NULL,//无父窗口，无主菜单
		hInstance,
		NULL
	);
	if (!hwnd)
	{
		MessageBox(NULL, "窗口创建失败", (LPCTSTR)"创建窗口", NULL);
		return 1;
	}
	//显示刷新之后窗口再变成活得
	ShowWindow(hwnd, nCmdShow);//显示窗口
	UpdateWindow(hwnd);//刷新窗口
	HACCEL ha = LoadAccelerators(hInstance, "MYMENUACCEL");

	while (GetMessage(&msg, NULL, 0, 0)) {//消息循环
		if (!TranslateAccelerator(hwnd, ha, &msg)) {
			TranslateMessage(&msg);
			DispatchMessage(&msg);
		}
	}
	return msg.wParam;//程序终止时将消息返回系统
}

//窗口函数的代码
long WINAPI WndProc(HWND hwnd, UINT msg, UINT wParam, LONG lParam) {
	HDC hdc; //设备描述符，存储了当前窗口的坐标、画笔、画刷等系列绘图相关的输出设备属性

	PAINTSTRUCT ps;
	HMENU hmenu, haddmenu;
	switch (msg)
	{
	case WM_COMMAND:
		switch(LOWORD(wParam)) {
		case IDM_ADDMENU://在主菜单中添加弹出式统计计算菜单
			hmenu = GetMenu(hwnd);
			haddmenu = CreateMenu();//动态创建菜单
			//在创建得菜单中增加菜单项
			AppendMenu(haddmenu, MF_ENABLED, IDM_QiuHe, "求和");
			AppendMenu(haddmenu, MF_ENABLED, IDM_FangCha, "方差");
			AppendMenu(haddmenu, MF_ENABLED, IDM_PingJunZhi, "平均值");
			AppendMenu(haddmenu, MF_ENABLED, IDM_JunFangGen, "均方根");
			//将创建的弹出式菜单插入主菜单中
			InsertMenu(hmenu, 2, MF_POPUP | MF_BYPOSITION, (UINT)haddmenu, "统计计算(&C)");
			//相应改变菜单中有关绘图统计计算菜单项的属性
			EnableMenuItem(hmenu, IDM_ADDMENU, MF_GRAYED);
			EnableMenuItem(hmenu, IDM_DELMENU, MF_ENABLED);
			DrawMenuBar(hwnd);//重新显示窗口菜单
			break;
		case IDM_DELMENU:
			hmenu = GetMenu(hwnd);
			DeleteMenu(hmenu, 2, MF_BYPOSITION);//删除统计计算菜单项
			//相应改变“文件”菜单中有关统计计算菜单项中的属性
			EnableMenuItem(hmenu, IDM_ADDMENU, MF_ENABLED);
			EnableMenuItem(hmenu, IDM_DELMENU, MF_GRAYED);
			DrawMenuBar(hwnd);//重新显示窗口菜单
			break;
		}
		break;

	case WM_DESTROY:
		PostQuitMessage(0);//发出退出消息
		break;
	default:
		return DefWindowProc(hwnd, msg, wParam, lParam);//默认时采用系统消息默认处理函数
		break;
	}
	return 0;
}
